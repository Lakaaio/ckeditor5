include ../_mixin/_type

if isNonEmptyArray( data.typeParameters )
	h2( id="type-parameters" class="hidden-loading" ) Type parameters

	ul( class="collapsing-list hidden-loading" )
		each type in data.typeParameters

			li( class="collapsing-list__item collapsing-list__item--visible" )
				div( class="collapsing-list__term toggler--collapsed" class=type.description ? "" : "hidden" )
					h3
						code
							span( class="member-name" ) #{ type.name }

							//- We mark most TypeScript types as `object`, as their structure is complex.
							//- Hence, it does not really make sense to show that a type extends an unknown `object`.
							if ( type.value && type.value[ 0 ] !== 'object' )
								| !{' : '}
								if ( type.isExtending )
									i !{ 'extends ' }
								+type( type.value )

				if ( type.description )
					div.collapsing-list__description
						div.collapsing-list__content
							| !{ type.description.content }
