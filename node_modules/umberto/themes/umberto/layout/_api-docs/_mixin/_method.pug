include _badge
include _type
include _params
include _return
include _fires-item
include _link-or-text
include ./_api-see-source.pug
include ./_dev-names.pug
include ./_related.pug
include ./type-parameter

mixin method( met )
	- let attrData = createFilterAttribs( met );
	- const itemClasses = [ 'collapsing-list__item', 'collapsing-list__item--visible' ];

	li( class = itemClasses )&attributes( attrData )
		- const id = encodeURI( met.id )
		div( class="collapsing-list__term toggler--collapsed" id=id )
			h3
				//- badges
				if isNonEmptyArray( met.badges )
					p.badges
						each badge in met.badges
							+badge( badge )

				code
					a( class="member-name" href="#" + id ) #{ met.name }

					//- params ( param1, [param2] )
					| (
					if isNonEmptyArray( met.params )
						each param, index in met.params
							if param.optional
								|  [ #{ param.name } ]
							else
								|  #{ param.name }
							if ( param.subParamsString )
								//- Allow rendering HTML from the `subParamsString` as it may contain links to other pages.
								| !{ param.subParamsString }
							if index < met.params.length - 1
								|,
							else
								| !{ ' ' }
					| )

					//- returns
					if isNonEmptyArray( met.returns )
						|  &rarr; !{' '}
						if isNonEmptyArray( met.returns[0].types )
							+type( met.returns[0].types )


				+devNames( met.longname, met.label )

		div.collapsing-list__description
			if ( met.description && met.description.excerpt )
				div.collapsing-list__excerpt
					p !{ met.description.excerpt }

			div.collapsing-list__content
				+seeSource( met )

				if ( met.description )
					| !{ met.description.content }

				if isNonEmptyArray( met.typeParameters )
					h4 Type parameters
					dl
						each type in met.typeParameters
							+typeParameter( type )

				if isNonEmptyArray( met.params )
					h4 Parameters
					+paramsMixin( met.params )

				if isNonEmptyArray( met.returns )
					h4 Returns
					dl
						each ret in met.returns
							+return( ret )

				if isNonEmptyArray( met.fires )
					h4 Fires
					ul
						each longname in met.fires
							+firesItem( longname )

				if isNonEmptyArray( met.see )
					+related( met.see )
