include nav-tree-item

mixin navTreeLevel( data, isRoot )
	- if ( !data ) return;
	- const pages = site.pages.filter( getPagesForNavTree( data.id, page.projectName ) );
	- const categories = data.categories ? markEmptyCategories( { pages: site.pages, categories: data.categories, projectName: page.projectName, group: page.groupId } ) : [];
	- let dataArr = [].concat( pages.toArray(), categories ).sort( ( a, b ) => ( a.title || a.name ).localeCompare( b.title || b.name ) );
	- dataArr.forEach( ( item, idx ) => { item.index = idx; } );
	//- Default order value is 0, some categories might not have assigned value that's why there is fallback to default value.
	- dataArr.sort( ( a, b ) => ( a.order || 0 ) === ( b.order || 0 ) ? a.index - b.index : ( a.order || 0 ) - ( b.order || 0 ) );
	- const shouldPrintSubTree = dataArr.filter( item => item.title || item.hasDescendentLeaf ).length || projectLocals.navigationShowEmptyCategories

	if isRoot
		if data.navigationIncludeIndex
			+navTreeItem( findMainCategoryPage( data.id, page.projectName, site.pages ) )

		each item in dataArr
			if item.name
				+navTreeLevel( item, false )
			else
				+navTreeItem( item )

	//- We don't want to display empty categories (#523).
	else if shouldPrintSubTree
		li
			div.tree__item__wrapper
				span( class="tree__item--folder tree__item__text" ) #{ data.name }
				- if( data.badges )
					each badge in normalizeBadges( data )
						span( class="tree__item__badge tree__item__badge_" + badge.name data-badge-tooltip=badge.label )
							span( class="tree__item__badge__text" ) #{ badge.label }
			ul.tree__item-nested-list
				each item in dataArr
					//- Categories have a property 'name', guides don't have property 'name'.
					if item.name
						+navTreeLevel( item, false )
					else
						+navTreeItem( item )
