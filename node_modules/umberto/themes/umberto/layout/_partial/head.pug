meta( charset='utf-8' )
meta( name='viewport' content='width=device-width, initial-scale=1' )

- const titleSuffix = page.groupId === 'api-reference' ? page.projectfullname + ' API docs' : page.projectfullname + ' Documentation';
- const title = page[ 'meta-title' ] ? page[ 'meta-title' ] : page[ 'meta-title-short' ] ? page[ 'meta-title-short' ] + ' - ' + titleSuffix : page.title + ' - ' + titleSuffix;
title= title

//- Used for meta tag and for og:*
- const ogConfig = projectLocals && projectLocals.og ? projectLocals.og : mainOg || {};

if ( page[ 'meta-description' ] || ogConfig.description )
	meta( name='description' content= page[ 'meta-description' ] || ogConfig.description )

if ( page[ 'twitter-card' ] || ogConfig.description )
	meta( name='twitter:card' content= page[ 'twitter-card' ] || ogConfig.description )
	meta( name='twitter:site' content= '@ckeditor' )

meta( name= 'x-generated-at' content= Date() )

if ( mainOg || ( projectLocals && projectLocals.og ) || page[ 'og-description' ] )
	meta( property='og:title' content= page[ 'og-title' ] || title )
	if ( ogConfig.description || page[ 'og-description' ] )
		meta( property='og:description' content= page[ 'og-description' ] || ( ogConfig.description ? ogConfig.description : mainOg.description ) )
	if ( ogConfig.image || mainOg.image )
		- const hostname = mainOg.hostname || ogConfig.hostname;
		meta( property='og:image' content= hostname + pathJoin( '/docs', page.latestBasePath || '/', ogConfig.image ? ogConfig.image : mainOg.image) )
	meta( property='og:type' content='website' )
	if ( page.layout === 'index' )
		meta( property='og:url' content= page.canonicalUrlBeginning + 'index.html' )
	else
		meta( property='og:url' content= page.canonicalUrlBeginning + page.path.replace( page.BASE_PATH, projectLocals.latestBasePath ) )

meta( property= 'DC.language' content= 'en' )
meta( property= 'DC.publisher' content= 'CKSource' )
meta( property= 'DC.creator' content= 'CKEditor' )
meta( property= 'DC.title' content= page[ 'dc-title' ] || title )
meta( property= 'DC.format' content= 'text/html' )
meta( property= 'DC.type' content= 'Text' )
if ( page[ 'dc-description' ] || ogConfig.description )
	meta( property= 'DC.description' content= page[ 'dc-description' ] || ogConfig.description )

if page.BASE_PATH && page.BASE_PATH !== '.' && !page.BASE_PATH.includes( 'latest' )
	link( rel = 'canonical' href = page.canonicalUrlBeginning + page.path.replace( page.BASE_PATH, projectLocals.latestBasePath ) )

if page.BASE_PATH
	link( rel="icon" type="image/png" href=relative_url( page.path, pathJoin( page.BASE_PATH, 'assets/img/favicons/16x16.png' ) ) sizes="16x16" )
	link( rel="icon" type="image/png" href=relative_url( page.path, pathJoin( page.BASE_PATH, 'assets/img/favicons/32x32.png' ) ) sizes="32x32" )
	link( rel="icon" type="image/png" href=relative_url( page.path, pathJoin( page.BASE_PATH, 'assets/img/favicons/96x96.png' ) ) sizes="96x96" )
	link( rel="apple-touch-icon" type="image/png" href=relative_url( page.path, pathJoin( page.BASE_PATH, 'assets/img/favicons/200x200.png' ) ) )

if ( docSearchConfig && docSearchConfig.isEnabled && !disableSearch && (!projectLocals || !projectLocals.disableSearch) )
	link( rel = 'stylesheet', href = docSearchConfig.css )

link( rel = 'stylesheet', href = relative_url( page.path, 'assets/' + umbertoVersion + '/css/styles.css' ), type='text/css' media='all' )

if projectLocals
	each path in projectLocals.extraStylePaths
		link( rel= 'stylesheet', href = relative_url( page.path, path ), type='text/css' )

if page.isSnippetPage
	//UMBERTO: SNIPPET: CSS

include google-optimize
include google-tag-manager
include google-analytics

block projectVersion
