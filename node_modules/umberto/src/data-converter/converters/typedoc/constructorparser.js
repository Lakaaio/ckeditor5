/**
 * @license Copyright (c) 2017-2023, CKSource Holding sp. z o.o. All rights reserved.
 * For licensing, see LICENSE.md.
 */

'use strict';

const MethodParser = require( './methodparser' );

module.exports = class ConstructorParser extends MethodParser {
	/**
	 * @param {TypedocReflectionMeta} item
	 * @returns {Boolean}
	 */
	canParse( item ) {
		return item.kindString === 'Constructor';
	}

	/**
	 * @param {TypedocReflection<'Constructor'>} item
	 * @param {String} parentName
	 * @returns {Array.<Object>}
	 */
	parse( item, parentName ) {
		// Absence of sources means that the actual class does not have a constructor.
		if ( !item.sources ) {
			return null;
		}

		const results = super.parse( item, parentName );

		for ( const item of results ) {
			// Constructors cannot return any value.
			delete item.returns;
		}

		return results;
	}
};
