import type { CompressedOperationsData } from '../compressor';
import type { ProtobufDescriptor } from '../protobuffactory';
import type { Operation } from 'ckeditor5/src/engine';
/**
 * Compresses and decompresses single operation to the binary format.
 */
export default class OperationCompressor {
    constructor(id: number, operationName: string, protobufDescriptor: ProtobufDescriptor);
    /**
     * Serializes and consumes the first operation from the list.
     *
     * @param result Object to which compression result will be added.
     * @param operations List of operations to compress. The first one will be compressed
     * and removed from the list.
     */
    compress(result: CompressedOperationsData, operations: Array<Operation>): boolean;
    /**
     * Deserializes and consumes buffered operation.
     *
     * @param result Decompressed operation.
     * @param data Data to decompress.
     */
    decompress(result: Array<Operation>, data: CompressedOperationsData): void;
}
